---
- name: OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Include collector definitions
  include_vars: "collector_definitions.yml"

- name: Check if diamond is installed
  stat: path=/etc/diamond/diamond.conf
  register: checkdiamondconffile

- name: Check if diamond is running
  shell: pgrep diamond
  register: checkdiamondprocess
  ignore_errors: true

# Install from pip
- include: setup-Debian-pip.yml
  when: ansible_os_family == 'Debian' and install_from_pip == true

# Install prebuilt diamond on Debian
- include: setup-Debian-bin.yml
  when: ansible_os_family == 'Debian' and build_from_source == false and install_from_pip == false

# Build Diamond from source
- include: setup-Debian-source.yml
  when: ansible_os_family == 'Debian' and build_from_source == true and not checkdiamondconffile.stat.exists and checkdiamondprocess|failed

# Build Diamond from source
- include: setup-RedHat-source.yml
  when: ansible_os_family == 'RedHat' and build_from_source == true and not checkdiamondconffile.stat.exists and checkdiamondprocess|failed

# Common for both OS's

- name: Update diamond.conf with latest template content (pip)
  template: src=diamond-pip.conf dest="{{diamond_conf_basepath}}/diamond.conf" backup=yes
  register: diamondconffilestate
  when: install_from_pip == true
  tags:
    - diamond_conf

- name: Update diamond.conf with latest template content (default)
  template: src=diamond.conf dest="{{diamond_conf_basepath}}/" backup=yes
  register: diamondconffilestate
  when: install_from_pip == false
  tags:
    - diamond_conf

###
# The following is currently deprecated.
# Leaving this for Ansible 2.x.
# Will do explicit checks for each known collector instead.
###
#- include: collectors/{{ item.key }}.yml
#  with_dict: diamond_collector_default_defs
#  when: "item.key not in diamond_collector_extra_defs.keys() and item.enabled"
#- include: collectors/{{ item.key }}.yml
#  with_dict: diamond_collector_extra_defs

# NginxCollector
- name: Configure NginxCollector
  include: collectors/NginxCollector.yml
  when: "'NginxCollector' in diamond_collector_extra_defs.keys() and diamond_collector_extra_defs.NginxCollector.enabled"
  tags:
    - NginxCollector

- name: Configuring collector {{item.key}}
  template: src=diamondcollectorconf.j2 dest="{{collector_conf_path}}/{{item.key}}.conf"
  with_dict: diamond_collector_default_defs
  when: "item.key not in diamond_collector_extra_defs.keys()"
  register: defaultdiamondcollectorsstate

- name: Configuring collector {{item.key}}
  template: src=diamondcollectorconf.j2 dest="{{collector_conf_path}}/{{item.key}}.conf"
  with_dict: diamond_collector_extra_defs
  register: extradiamondcollectorsstate

- name: Restart diamond if config has changed
  service: name=diamond state=restarted
  when: defaultdiamondcollectorsstate.changed or extradiamondcollectorsstate.changed or diamondconffilestate.changed or checkdiamondprocess|failed
